name: Core

on:
  push:
    paths-ignore:
    - 'Xamarin.TravelCostsReport/Mobile/TravelingCostsReport.Android/**'
     
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  

jobs:

  NetStandards:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          
      - name: Restore dependencies
        run: |
          cd Xamarin.TravelCostsReport
          dotnet restore Xamarin.TravelCostsReport.sln
          
      - name: Build, Analyze and Tests 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          COVERLET_OUPUT: "../../../TestResults/TestResult.json"
        run: |
            dotnet sonarscanner begin /k:"zanuccod_Xamarin.TravelCostsReport" /o:"zanuccod" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="TestResults/TestResult.xml"
            
            dotnet build Xamarin.TravelCostsReport/BusinnesLogic/BusinnesLogic -c Release --no-restore
            dotnet build Xamarin.TravelCostsReport/Core/Core -c Release --no-restore
            dotnet build Xamarin.TravelCostsReport/Mobile/TravelingCostsReport -c Release --no-restore
            
            dotnet test -c Release Xamarin.TravelCostsReport/BusinnesLogic/BusinnesLogic.Tests /p:CollectCoverage=true /p:CoverletOutputFormat=json /p:CoverletOutput=${COVERLET_OUPUT}
            dotnet test -c Release Xamarin.TravelCostsReport/BusinnesLogic/BusinnesLogic.IntegrationTests /p:CollectCoverage=true /p:CoverletOutputFormat=json /p:CoverletOutput=${COVERLET_OUPUT} /p:MergeWith=${COVERLET_OUPUT}
            
            dotnet test -c Release Xamarin.TravelCostsReport/Core/Core.Tests /p:CollectCoverage=true /p:CoverletOutputFormat=json /p:CoverletOutput=${COVERLET_OUPUT} /p:MergeWith=${COVERLET_OUPUT}
            dotnet test -c Release Xamarin.TravelCostsReport/Core/Core.IntegrationTests /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=../../../TestResults/TestResult.xml /p:MergeWith=${COVERLET_OUPUT}
            
            pwd
            ls
            dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
